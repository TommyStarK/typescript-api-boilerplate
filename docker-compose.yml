version: '3.8'

networks:
  boilerplate:

# volumes:
#   mongo_volume:
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: /var/lib/mongo/data/db
#   postgres_volume:
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: /var/lib/postgres

services:
  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - boilerplate
    # volumes:
      # - mongo_volume:/data/db
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_DB=dummy
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    ports:
      - "5432:5432"
    networks:
      - boilerplate
    volumes:
      # - postgres_volume:/var/lib/postgres
      - ${PWD}/hack/fixtures/db-init.sql:/docker-entrypoint-initdb.d/db-init.sql
    restart: unless-stopped

  api:
    build: .
    hostname: api.boilerplate
    container_name: api
    command:
    - /bin/bash
    - -c
    - |
      ./hack/wait_for_it.sh --timeout=30 --host=mongo --port=27017 --strict -- \
      ./hack/wait_for_it.sh --timeout=30 --host=postgres --port=5432 --strict -- \
      yarn start;
    depends_on:
      - mongo
      - postgres
    environment:
      - LOG_LEVEL=debug
      - MONGO_URI=mongo
      - POSTGRES_URL=postgres
    ports:
      - "3001:3001"
      - "8443:8443"
    networks:
      - boilerplate
    restart: unless-stopped
